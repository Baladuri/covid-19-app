{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tauqe\\\\React projects\\\\covid19-app\\\\covid19-app\\\\src\\\\components\\\\DayOneLive.js\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction DayOneLive() {\n  //   useEffect(() => {\n  //     async function fetchSummary() {\n  //       const req = await axios.get(\"https://ipapi.co/json/\");\n  //       console.log(req.data.country_name);\n  //       const request = await axios.get(\n  //         `https://api.covid19api.com/dayone/country/${req.data.country_name}/status/confirmed`\n  //       );\n  //       // console.log(country);\n  //       console.log(request.data);\n  //       //setSummary(request.data.Global);\n  //       //const getDate = request.data.Date.split(\"T\");\n  //       //setDate(getDate[0]);\n  //     }\n  //     // getCountry();\n  //     fetchSummary();\n  //     return () => {};\n  //   }, []);\n  const data = {\n    labels: [\"Red\", \"Green\", \"Blue\", \"Orange\"],\n    dataset: [{\n      data: labels.map(() => faker.datatype.number({\n        min: 0,\n        max: 1000\n      }))\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DayOneLive;\nexport default DayOneLive;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayOneLive\");","map":{"version":3,"sources":["C:/Users/tauqe/React projects/covid19-app/covid19-app/src/components/DayOneLive.js"],"names":["axios","React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","Doughnut","register","DayOneLive","data","labels","dataset","map","faker","datatype","number","min","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;AASA,SAASC,GAAT,EAAcC,QAAd,QAA8B,iBAA9B;;AAEAR,OAAO,CAACS,QAAR,CACER,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF;;AASA,SAASI,UAAT,GAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,QAAzB,CADG;AAEXC,IAAAA,OAAO,EAAE,CACP;AACEF,MAAAA,IAAI,EAAEC,MAAM,CAACE,GAAP,CAAW,MAAMC,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsB;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf,OAAtB,CAAjB;AADR,KADO;AAFE,GAAb;AAQA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAER;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAhCQD,U;AAkCT,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction DayOneLive() {\r\n  //   useEffect(() => {\r\n  //     async function fetchSummary() {\r\n  //       const req = await axios.get(\"https://ipapi.co/json/\");\r\n  //       console.log(req.data.country_name);\r\n  //       const request = await axios.get(\r\n  //         `https://api.covid19api.com/dayone/country/${req.data.country_name}/status/confirmed`\r\n  //       );\r\n  //       // console.log(country);\r\n  //       console.log(request.data);\r\n  //       //setSummary(request.data.Global);\r\n  //       //const getDate = request.data.Date.split(\"T\");\r\n  //       //setDate(getDate[0]);\r\n  //     }\r\n  //     // getCountry();\r\n  //     fetchSummary();\r\n  //     return () => {};\r\n  //   }, []);\r\n\r\n  const data = {\r\n    labels: [\"Red\", \"Green\", \"Blue\", \"Orange\"],\r\n    dataset: [\r\n      {\r\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <Bar data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayOneLive;\r\n"]},"metadata":{},"sourceType":"module"}